suite: test blocky
values:
  - ./values/required-values.yaml
templates:
  - deployment.yaml
release:
  name: test
  namespace: test
tests:
  - it: should create a Deployment
    asserts:
      - hasDocuments:
          count: 1

  - it: should create a deployment with correct specifications
    documentIndex: 0
    asserts:
      - equal:
          path: metadata.name
          value: test-blocky
      - equal:
          path: metadata.namespace
          value: test
      - equal:
          path: spec.replicas
          value: 2
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.selector.matchLabels["app.kubernetes.io/name"]
          value: blocky
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/name"]
          value: blocky
      - notExists:
          path: spec.template.metadata.annotations
      - exists:
          path: spec.template.spec.affinity.podAntiAffinity
      - equal:
          path: spec.template.spec.containers[0].name
          value: blocky
      - equal:
          path: spec.template.spec.containers[0].image
          value: "ghcr.io/0xerr0r/blocky:v0.25"
      - notExists:
          path: spec.template.spec.containers[0].resources.limits.cpu
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 128Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 100m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 128Mi
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: config
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /app/config.yml
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].subPath
          value: config.yml
      - equal:
          path: spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: true
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.template.spec.volumes[0].name
          value: config
      - equal:
          path: spec.template.spec.volumes[0].configMap.name
          value: test-blocky-config

  - it: can add annotations
    documentIndex: 0
    set:
      blocky.annotations: {"test": "true"}
    asserts:
      - equal:
          path: spec.template.metadata.annotations["test"]
          value: "true"

  - it: should use only chart name if release name contains chart name
    documentIndex: 0
    release:
      name: blocky
    asserts:
      - equal:
          path: metadata.name
          value: blocky
      - equal:
          path: spec.template.spec.volumes[0].configMap.name
          value: blocky-config

  - it: respects fullnameOverride
    documentIndex: 0
    set:
      fullnameOverride: "test-fullname"
    asserts:
      - equal:
          path: metadata.name
          value: test-fullname

  - it: respects namespaceOverride
    documentIndex: 0
    set:
      namespaceOverride: "test-namespace"
    asserts:
      - equal:
          path: metadata.namespace
          value: test-namespace
