name: Pull request

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize, labeled, unlabeled]

permissions:
  contents: read
  pull-requests: write
  repository-projects: read

jobs:
  test-and-build:
    strategy:
      matrix:
        chart: [blocky]
    name: Test (${{ matrix.chart }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for changed files
        uses: dorny/paths-filter@v3
        id: changed-files
        with:
          filters: |
            chart:
              - 'charts/${{ matrix.chart }}/**'
      - name: Verify labels
        uses: Brains-Beyond-Expectations/labeller@v1
        if: steps.changed-files.outputs.chart == 'true'
        with:
          add_labels: ${{ matrix.chart }}
          required_labels: |
            feature,enhancement,fix,bugfix,bug,chore
            major,minor,patch
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        if: steps.changed-files.outputs.chart == 'true'
      - name: Set up Helm
        uses: azure/setup-helm@v4
        if: steps.changed-files.outputs.chart == 'true'
      - name: Install Helm unittest plugin
        if: steps.changed-files.outputs.chart == 'true'
        run:
          helm plugin install https://github.com/helm-unittest/helm-unittest.git
      - name: Run unit tests
        if: steps.changed-files.outputs.chart == 'true'
        working-directory: charts/${{ matrix.chart }}
        run: |
          helm dependency update
          helm unittest .
      - name: Render chart
        if: steps.changed-files.outputs.chart == 'true'
        working-directory: charts/${{ matrix.chart }}
        run: |
          helm template . --values tests/values/required-values.yaml --output-dir /tmp/${{ matrix.chart }}
      - name: Lint chart
        if: steps.changed-files.outputs.chart == 'true'
        uses: stackrox/kube-linter-action@v1
        with:
          directory: /tmp/${{ matrix.chart }}
  update-library:
    name: Update library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: add-bbe-lib-gen
      - name: Generate a token for Brainz-Bot
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.BRAINZ_BOT_ID }}
          private-key: ${{ secrets.BRAINZ_BOT_PRIVATE_KEY }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"
          cache-dependency-path: |
            lib-gen/go.sum
      - name: Run lib-gen
        run: |
          cd lib-gen
          go mod tidy
          go run main.go
      - name: Commit changes
        run: |
          # Commit the changes
          FILES_CHANGED="library.yaml"
          for file in $FILES_CHANGED; do
            CONTENT=$(base64 -w 0 $file)
            FILENAME=$(basename $file)
            SHA=$(curl -s -H "Authorization: token ${{ steps.generate-token.outputs.token }}" https://api.github.com/repos/${{ github.repository }}/contents/$file?ref=add-bbe-lib-gen | jq -r .sha)
            if [ "$SHA" == "null" ]; then
              SHA=""
            fi
            curl -s -X PUT -H "Authorization: token ${{ steps.generate-token.outputs.token }}" \
              -d "{\"message\":\"chore: update $FILENAME [skip ci]\", \"content\":\"$CONTENT\", \"branch\":\"add-bbe-lib-gen\", \"sha\":\"$SHA\"}" \
              https://api.github.com/repos/${{ github.repository }}/contents/$file
          done
