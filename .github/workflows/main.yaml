name: Pull request

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  packages: write
  pull-requests: write

jobs:
  update-charts:
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        chart: [blocky]
    name: Update (${{ matrix.chart }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for changed files
        uses: dorny/paths-filter@v3
        id: changed-files
        with:
          filters: |
            chart:
              - 'charts/${{ matrix.chart }}/**'
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
      - name: Set up Helm
        uses: azure/setup-helm@v4
        if: steps.changed-files.outputs.chart == 'true'
      - name: Install Helm unittest plugin
        if: steps.changed-files.outputs.chart == 'true'
        run:
          helm plugin install https://github.com/helm-unittest/helm-unittest.git
      - name: Run unit tests
        if: steps.changed-files.outputs.chart == 'true'
        working-directory: charts/${{ matrix.chart }}
        run: |
          helm dependency update
          helm unittest .
      - name: Render chart
        if: steps.changed-files.outputs.chart == 'true'
        working-directory: charts/${{ matrix.chart }}
        run: |
          helm template . --values tests/values/required-values.yaml --output-dir /tmp/${{ matrix.chart }}
      - name: Lint chart
        if: steps.changed-files.outputs.chart == 'true'
        uses: stackrox/kube-linter-action@v1
        with:
          directory: /tmp/${{ matrix.chart }}
      - name: Create release draft
        if: steps.changed-files.outputs.chart == 'true'
        uses: release-drafter/release-drafter@v6
        id: draft-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: ${{ matrix.chart }}-release-drafter.yaml
          publish: false
      - name: Update chart version
        if: steps.changed-files.outputs.chart == 'true'
        working-directory: charts/${{ matrix.chart }}
        run: |
          yq e '.version = "${{ steps.draft-release.outputs.resolved_version }}"' -i Chart.yaml
      - name: Configure Git and push
        if: steps.changed-files.outputs.chart == 'true'
        working-directory: charts/${{ matrix.chart }}
        shell: bash
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Chart.yaml
          git push --force-with-lease origin main
      - name: Publish chart
        if: steps.changed-files.outputs.chart == 'true'
        working-directory: charts/${{ matrix.chart }}
        shell: bash
        run: |
          helm package . -d ./../..
          cd ../../
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username $GITHUB_ACTOR --password-stdin
          helm push *.tgz oci://ghcr.io/brains-beyond-expectations/bbe-charts
          curl -L -o index.yaml https://raw.githubusercontent.com/Brains-Beyond-Expectations/bbe-charts/gh-pages/index.yaml
          helm repo index . --merge index.yaml --url "https://Brains-Beyond-Expectations.github.io/bbe-charts"
      - name: Configure Git and push
        if: steps.changed-files.outputs.chart == 'true'
        shell: bash
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          cp index.yaml /tmp/index.yaml
          git reset --hard
          git fetch origin gh-pages
          git checkout gh-pages
          cp /tmp/index.yaml index.yaml
          git add index.yaml
          git commit -m "Updated Helm chart index"
          git push --force-with-lease origin HEAD:gh-pages
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - name: Finalize release
        if: steps.changed-files.outputs.chart == 'true'
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: ${{ matrix.chart }}-release-drafter.yaml
          publish: true
          commitish: ${{ steps.draft-release.outputs.commit_sha }}
